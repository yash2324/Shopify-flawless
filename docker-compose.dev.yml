version: '3.8'

services:
  # Redis for development
  redis:
    image: redis:7-alpine
    container_name: shopify-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - shopify-dev-network

  # Development environment with hot reload
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: shopify-analytics-api-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "9229:9229" # Debug port
    environment:
      - NODE_ENV=development
      - PORT=3000
      - API_PREFIX=api/v1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - LOG_LEVEL=debug
    env_file:
      - .env.local
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    networks:
      - shopify-dev-network
    command: npm run start:debug

  # Redis Commander for Redis management (development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: shopify-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - shopify-dev-network

volumes:
  redis_dev_data:
    driver: local

networks:
  shopify-dev-network:
    driver: bridge
